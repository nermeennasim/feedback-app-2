{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nerme\\\\Documents\\\\feedback-app-2\\\\src\\\\components\\\\FeedbackStats.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useContext } from \"react\";\nimport FeedbackContext from \"../context/FeedbackContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FeedbackStats() {\n  _s();\n  const {\n    feedback\n  } = useContext(FeedbackContext);\n  //calculate ratings Average\n  let average = feedback.reduce((acc, current) => {\n    return acc + current.rating;\n  }, 0) / feedback.length;\n  console.log(average);\n  //fixed one digit and replace trailing zeros\n  average = average.toFixed(1).replace(/[.,]0$/, \"\");\n  //2nd arugment is zero in reduce function so that we are initializing with zero\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"feedback-stats\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [feedback.length, \" Reviews\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: [\"Average Rating: \", isNaN(average) ? 0 : average, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 3\n  }, this);\n}\n_s(FeedbackStats, \"RNPzS9Jfq5OTQN+7+1vdg6m3Kwc=\");\n_c = FeedbackStats;\nexport default FeedbackStats;\nvar _c;\n$RefreshReg$(_c, \"FeedbackStats\");","map":{"version":3,"names":["React","PropTypes","useContext","FeedbackContext","jsxDEV","_jsxDEV","FeedbackStats","_s","feedback","average","reduce","acc","current","rating","length","console","log","toFixed","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","isNaN","_c","$RefreshReg$"],"sources":["C:/Users/nerme/Documents/feedback-app-2/src/components/FeedbackStats.jsx"],"sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useContext } from \"react\";\r\nimport FeedbackContext from \"../context/FeedbackContext\";\r\n\r\nfunction FeedbackStats() {\r\n\tconst { feedback } = useContext(FeedbackContext);\r\n\t//calculate ratings Average\r\n\tlet average =\r\n\t\tfeedback.reduce((acc, current) => {\r\n\t\t\treturn acc + current.rating;\r\n\t\t}, 0) / feedback.length;\r\n\r\n\tconsole.log(average);\r\n\t//fixed one digit and replace trailing zeros\r\n\taverage = average.toFixed(1).replace(/[.,]0$/, \"\");\r\n\t//2nd arugment is zero in reduce function so that we are initializing with zero\r\n\treturn (\r\n\t\t<div className=\"feedback-stats\">\r\n\t\t\t<h4>{feedback.length} Reviews</h4>\r\n\t\t\t<h4>Average Rating: {isNaN(average) ? 0 : average} </h4>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default FeedbackStats;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,UAAU,QAAQ,OAAO;AAClC,OAAOC,eAAe,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAS,CAAC,GAAGN,UAAU,CAACC,eAAe,CAAC;EAChD;EACA,IAAIM,OAAO,GACVD,QAAQ,CAACE,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;IACjC,OAAOD,GAAG,GAAGC,OAAO,CAACC,MAAM;EAC5B,CAAC,EAAE,CAAC,CAAC,GAAGL,QAAQ,CAACM,MAAM;EAExBC,OAAO,CAACC,GAAG,CAACP,OAAO,CAAC;EACpB;EACAA,OAAO,GAAGA,OAAO,CAACQ,OAAO,CAAC,CAAC,CAAC,CAACC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC;EAClD;EACA,oBACCb,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC9Bf,OAAA;MAAAe,QAAA,GAAKZ,QAAQ,CAACM,MAAM,EAAC,UAAQ;IAAA;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eAClCnB,OAAA;MAAAe,QAAA,GAAI,kBAAgB,EAACK,KAAK,CAAChB,OAAO,CAAC,GAAG,CAAC,GAAGA,OAAO,EAAC,GAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnD;AAER;AAACjB,EAAA,CAlBQD,aAAa;AAAAoB,EAAA,GAAbpB,aAAa;AAoBtB,eAAeA,aAAa;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}